sequenceDiagram
    participant User
    participant UI as UI Components
    participant AuthM as AuthManager
    participant TractorC as TractorController
    participant CommM as CommunicationManager
    participant OfflineM as OfflineManager
    participant TractorS as TractorStatus
    participant MapM as MapManager
    participant Schedule
    participant Task
    
    %% User Authentication Flow
    User->>UI: Enter credentials
    UI->>AuthM: login(credentials)
    AuthM-->>UI: AuthResult(token)
    UI-->>User: Display dashboard
    
    %% Initial Status Load
    UI->>CommM: establishConnection()
    CommM-->>UI: ConnectionStatus
    UI->>TractorC: getStatus()
    TractorC->>CommM: sendCommand(statusRequest)
    alt Connection Available
        CommM-->>TractorC: TractorStatus
    else No Connection
        CommM->>OfflineM: getLatestCachedStatus()
        OfflineM-->>CommM: TractorStatus (cached)
        CommM-->>TractorC: TractorStatus
    end
    TractorC-->>UI: TractorStatus
    UI->>MapM: updateTractorPosition(location)
    MapM-->>UI: Updated map view
    UI-->>User: Display tractor status and location
    
    %% Manual Control Operation
    User->>UI: Press forward button
    UI->>TractorC: moveForward(speed)
    TractorC->>CommM: sendCommand(moveForward)
    alt Connection Available
        CommM->>TractorS: Update movement status
        TractorS-->>CommM: ControlResponse
    else No Connection
        CommM->>OfflineM: queueCommand(moveForward)
        OfflineM-->>CommM: Command queued
    end
    CommM-->>TractorC: ControlResponse
    TractorC-->>UI: Status update
    UI-->>User: Visual feedback of command
    
    %% Start Operation Flow
    User->>UI: Select "Start Cutting"
    UI->>TractorC: startOperation("cutting")
    TractorC->>CommM: sendCommand(startCutting)
    alt Connection Available
        CommM->>TractorS: Update operation status
        TractorS-->>CommM: ControlResponse
    else No Connection
        CommM->>OfflineM: queueCommand(startCutting)
        OfflineM-->>CommM: Command queued
    end
    CommM-->>TractorC: ControlResponse
    TractorC-->>UI: Operation status update
    UI-->>User: Visual confirmation of operation
    
    %% Emergency Stop Flow
    User->>UI: Press emergency stop
    UI->>TractorC: emergencyStop()
    TractorC->>CommM: sendCommand(emergencyStop, highPriority)
    CommM->>TractorS: Immediate stop all operations
    TractorS-->>CommM: StopConfirmation
    CommM-->>TractorC: ControlResponse
    TractorC-->>UI: Stopped status
    UI-->>User: Visual confirmation of emergency stop
    
    %% Schedule Task Flow
    User->>UI: Create new task
    UI->>Task: new Task(details)
    Task-->>UI: Task instance
    UI->>Schedule: addTask(task)
    Schedule-->>UI: Updated schedule
    UI-->>User: Task added confirmation
    
    %% Execute Scheduled Task Flow
    note over Schedule: Task scheduled time reached
    Schedule->>TractorC: executeTask(taskId)
    TractorC->>CommM: sendCommand(startTask)
    CommM->>TractorS: Begin scheduled operation
    TractorS-->>CommM: OperationStarted
    CommM-->>TractorC: TaskExecutionStatus
    TractorC->>Task: updateStatus("in-progress")
    Task->>TractorC: Monitor progress
    TractorC-->>UI: Task execution updates
    UI-->>User: Visual progress of scheduled task
    
    %% Connection Lost Scenario
    note over CommM: Connection lost during operation
    CommM->>OfflineM: activateOfflineMode()
    OfflineM->>TractorC: notifyConnectionLost()
    TractorC->>TractorS: initiateFailSafe()
    TractorS-->>TractorC: FailSafeActivated
    TractorC-->>UI: Connection lost alert
    UI-->>User: Connection loss notification
    UI->>OfflineM: limitAvailableControls()
    OfflineM-->>UI: SafeControlsOnly
    UI-->>User: Display limited safe controls
    
    %% Connection Restored
    note over CommM: Connection restored
    CommM->>OfflineM: syncWithServer()
    OfflineM->>CommM: pendingCommands
    CommM->>TractorS: sendQueuedCommands()
    TractorS-->>CommM: BatchCommandResults
    CommM->>OfflineM: clearSyncedCommands()
    CommM-->>UI: ConnectionRestored
    UI-->>User: Connection restored notification
    UI->>TractorC: getStatus()
    TractorC->>CommM: sendCommand(statusRequest)
    CommM->>TractorS: getCurrentStatus()
    TractorS-->>CommM: CurrentTractorStatus
    CommM-->>TractorC: TractorStatus
    TractorC-->>UI: Updated status
    UI-->>User: Display current tractor status